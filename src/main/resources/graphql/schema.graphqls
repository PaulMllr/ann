interface Node {
    id: String!
}

type Neuron implements Node {
    id: String!
    description(makeUpperCase: Boolean): String
}

type Connection implements Node{
    id: String!
    from: String!
    to: String!
    weight: Float!
}

input CreateNeuronInput {
    description: String
    connections: [String]
}


# The Root Query for the application
type Query {
    neuronsInfo(ids: [String]): [Neuron]!
    connectionsFromNeuron(neuronId: String): [Connection]!
}

# The Root Mutation for the application
type Mutation {
    addNeuron(input: CreateNeuronInput!) : Neuron!
}